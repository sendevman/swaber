"""
Phone custom scalar type
"""
scalar Phone

enum Role {
	Admin,
	Member
}

enum AuthenticationProvider {
	Google
}

type Post {
	id: ID
	name: String!
}

type PostConnection {
	edges: [PostEdge]
}

"""
User class
"""
type _User {
	id: ID
	name: String!
	age: Int
	isCool: Boolean
	birthDate: Date!
	phone: Phone
	role: Role
	address: Address
	object: Object
	provider: AuthenticationProvider
	email: Email!
	password: String
	verifiedEmail: Boolean
	accessToken: String
	refreshToken: String
}

type _UserConnection {
	edges: [_UserEdge]
}

input PostWhereInput {
	name: StringWhereInput
	OR: [PostWhereInput]
	AND: [PostWhereInput]
}

input PostInput {
	name: String!
}

input PostUpdateFieldsInput {
	name: String
}

input _UserWhereInput {
	name: StringWhereInput
	age: IntWhereInput
	isCool: BooleanWhereInput
	birthDate: DateWhereInput
	phone: Phone
	role: AnyWhereInput
	address: AddressWhereInput
	object: ObjectWhereInput
	provider: AnyWhereInput
	email: EmailWhereInput
	password: StringWhereInput
	verifiedEmail: BooleanWhereInput
	accessToken: StringWhereInput
	refreshToken: StringWhereInput
	OR: [_UserWhereInput]
	AND: [_UserWhereInput]
}

input _UserInput {
	name: String!
	age: Int
	isCool: Boolean
	birthDate: Date!
	phone: Phone
	role: Role
	address: AddressInput
	object: ObjectInput
	provider: AuthenticationProvider
	email: Email!
	password: String
	verifiedEmail: Boolean
	accessToken: String
	refreshToken: String
}

input _UserUpdateFieldsInput {
	name: String
	age: Int
	isCool: Boolean
	birthDate: Date
	phone: Phone
	role: Role
	address: AddressUpdateFieldsInput
	object: ObjectUpdateFieldsInput
	provider: AuthenticationProvider
	email: Email
	password: String
	verifiedEmail: Boolean
	accessToken: String
	refreshToken: String
}

type Query {
	findOnePost(id: ID): Post
	findManyPost(where: PostWhereInput, offset: Int, limit: Int): PostConnection!
	"""
	User class
	"""
	findOne_User(id: ID): _User
	"""
	User class
	"""
	findMany_User(where: _UserWhereInput, offset: Int, limit: Int): _UserConnection!
	"""
	Hello world description
	"""
	helloWorld(name: String!): String
}

type Mutation {
	createOnePost(input: PostCreateInput): Post!
	createManyPost(input: PostsCreateInput): PostConnection!
	updateOnePost(input: PostUpdateInput): Post!
	updateManyPost(input: PostsUpdateInput): PostConnection!
	deleteOnePost(input: PostDeleteInput): Post!
	deleteManyPost(input: PostsDeleteInput): PostConnection!
	"""
	User class
	"""
	createOne_User(input: _UserCreateInput): _User!
	"""
	User class
	"""
	createMany_User(input: _UsersCreateInput): _UserConnection!
	"""
	User class
	"""
	updateOne_User(input: _UserUpdateInput): _User!
	"""
	User class
	"""
	updateMany_User(input: _UsersUpdateInput): _UserConnection!
	"""
	User class
	"""
	deleteOne_User(input: _UserDeleteInput): _User!
	"""
	User class
	"""
	deleteMany_User(input: _UsersDeleteInput): _UserConnection!
	signUp(input: SignUpInput): Boolean
	signIn(input: SignInInput): Boolean
	signInWithProvider(input: SignInWithProviderInput): Boolean
}