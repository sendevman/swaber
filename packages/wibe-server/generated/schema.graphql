### This file was generated by Nexus Schema
### Do not make changes to this file directly


input DeleteUserInput {
  id: ID!
}

type Mutation {
  createUser(input: UserInput): User
  createUsers(input: UserInput): [User]
  deleteUser(input: DeleteUserInput): User
  updateUser(input: UpdateUserInput): User
  updateUsers(where: UpdateUsersInput): [User]
}

type Query {
  user(id: String!): User
  users: [User]
}

input UpdateUserInput {
  fields: UserInput
  id: ID!
}

input UpdateUsersInput {
  age: WhereUpdateAgeInput
  name: WhereUpdateNameInput
  stringArrayTest: WhereUpdateStringArrayTestInput
}

type User {
  age: Int
  name: String
  stringArrayTest: [String]
}

input UserInput {
  age: Int
  name: String
  stringArrayTest: [String]
}

input WhereUpdateAgeInput {
  equalTo: Int
  greaterThan: Int
  greaterThanOrEqualTo: Int
  lessThan: Int
  lessThanOrEqualTo: Int
  notEqualTo: Int
}

input WhereUpdateNameInput {
  equalTo: String
  notEqualTo: String
}

input WhereUpdateStringArrayTestInput {
  in: [String]
  notIn: [String]
}