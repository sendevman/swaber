### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Collection1 {
  age: Int
  name: String
}

input Collection1Input {
  age: Int
  name: String
}

input DeleteCollection1Input {
  id: ID!
}

input DeleteCollection1sInput {
  age: WhereDeleteAgeInput
  name: WhereDeleteNameInput
}

type Mutation {
  createCollection1(input: Collection1Input): Collection1
  createCollection1s(input: Collection1Input): [Collection1]
  deleteCollection1(input: DeleteCollection1Input): Collection1
  deleteCollection1s(where: DeleteCollection1sInput): [Collection1]
  updateCollection1(input: UpdateCollection1Input): Collection1
  updateCollection1s(where: UpdateCollection1sInput): [Collection1]
}

type Query {
  collection1(id: String!): Collection1
  collection1s: [Collection1]
}

input UpdateCollection1Input {
  fields: Collection1Input
  id: ID!
}

input UpdateCollection1sInput {
  age: WhereUpdateAgeInput
  name: WhereUpdateNameInput
}

input WhereDeleteAgeInput {
  equalTo: Int
  greaterThan: Int
  greaterThanOrEqualTo: Int
  lessThan: Int
  lessThanOrEqualTo: Int
  notEqualTo: Int
}

input WhereDeleteNameInput {
  equalTo: String
  notEqualTo: String
}

input WhereUpdateAgeInput {
  equalTo: Int
  greaterThan: Int
  greaterThanOrEqualTo: Int
  lessThan: Int
  lessThanOrEqualTo: Int
  notEqualTo: Int
}

input WhereUpdateNameInput {
  equalTo: String
  notEqualTo: String
}