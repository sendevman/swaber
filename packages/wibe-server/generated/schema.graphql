"""Phone custom scalar type"""
scalar Phone

enum Role {
  Admin
  Member
}

enum AuthenticationProvider {
  Google
}

enum SecondaryFactor {
  EmailOTP
}

"""User class"""
type _User {
  id: ID!
  name: String
  age: Int
  isCool: Boolean
  email: Email
  post: Post
  postRelation: PostConnection
  birthDate: Date
  phone: Phone
  role: Role
  address: _UserAddress
  object: _UserObject
  authentication: _UserAuthentication
  provider: AuthenticationProvider
  verifiedEmail: Boolean
  createdAt: Date
  updatedAt: Date
}

"""Email scalar type"""
scalar Email

type PostConnection {
  edges: [PostEdge]
}

type PostEdge {
  node: Post!
}

"""Date scalar type"""
scalar Date

type _UserAddress {
  address1: String
  address2: String
  postalCode: Int
  city: String
  country: String
}

type _UserObject {
  objectOfObject: _UserObjectObjectOfObject
}

type _UserObjectObjectOfObject {
  name: String
}

type _UserAuthentication {
  emailPassword: _UserAuthenticationEmailPassword
  otp: _UserAuthenticationOtp
}

type _UserAuthenticationEmailPassword {
  email: Email!
  password: String!
}

type _UserAuthenticationOtp {
  code: String
}

"""User class"""
input _UserInput {
  name: String
  age: Int
  isCool: Boolean
  email: Email
  post: PostPointerInput
  postRelation: PostRelationInput
  birthDate: Date
  phone: Phone
  role: Role
  address: _UserAddressInput
  object: _UserObjectInput
  authentication: _UserAuthenticationInput
  provider: AuthenticationProvider
  verifiedEmail: Boolean
  createdAt: Date
  updatedAt: Date
}

input _UserAddressInput {
  address1: String
  address2: String
  postalCode: Int
  city: String
  country: String
}

input _UserObjectInput {
  objectOfObject: _UserObjectObjectOfObjectInput
}

input _UserObjectObjectOfObjectInput {
  name: String
}

input _UserAuthenticationInput {
  emailPassword: _UserAuthenticationEmailPasswordInput
  otp: _UserAuthenticationOtpInput
}

input _UserAuthenticationEmailPasswordInput {
  email: Email!
  password: String!
}

input _UserAuthenticationOtpInput {
  code: String
}

"""Input to link an object to a pointer _User"""
input _UserPointerInput {
  link: ID
  createAndLink: _UserCreateFieldsInput
}

"""User class"""
input _UserCreateFieldsInput {
  name: String
  age: Int
  isCool: Boolean
  email: Email
  post: PostPointerInput
  postRelation: PostRelationInput
  birthDate: Date
  phone: Phone
  role: Role
  address: _UserAddressCreateFieldsInput
  object: _UserObjectCreateFieldsInput
  authentication: _UserAuthenticationCreateFieldsInput
  provider: AuthenticationProvider
  verifiedEmail: Boolean
  createdAt: Date
  updatedAt: Date
}

input _UserAddressCreateFieldsInput {
  address1: String
  address2: String
  postalCode: Int
  city: String
  country: String
}

input _UserObjectCreateFieldsInput {
  objectOfObject: _UserObjectObjectOfObjectCreateFieldsInput
}

input _UserObjectObjectOfObjectCreateFieldsInput {
  name: String
}

input _UserAuthenticationCreateFieldsInput {
  emailPassword: _UserAuthenticationEmailPasswordCreateFieldsInput
  otp: _UserAuthenticationOtpCreateFieldsInput
}

input _UserAuthenticationEmailPasswordCreateFieldsInput {
  email: Email
  password: String
}

input _UserAuthenticationOtpCreateFieldsInput {
  code: String
}

"""Input to add a relation to the class _User"""
input _UserRelationInput {
  add: [ID!]
  remove: [ID!]
  createAndAdd: [_UserCreateFieldsInput!]
}

type Post {
  id: ID!
  name: String!
}

input PostInput {
  name: String!
}

"""Input to link an object to a pointer Post"""
input PostPointerInput {
  link: ID
  createAndLink: PostCreateFieldsInput
}

input PostCreateFieldsInput {
  name: String
}

"""Input to add a relation to the class Post"""
input PostRelationInput {
  add: [ID!]
  remove: [ID!]
  createAndAdd: [PostCreateFieldsInput!]
}

type _Session {
  id: ID!
  userId: String!
  accessToken: String!
  accessTokenExpiresAt: Date!
  refreshToken: String
  refreshTokenExpiresAt: Date!
  createdAt: Date!
  updatedAt: Date!
}

input _SessionInput {
  userId: String!
  accessToken: String!
  accessTokenExpiresAt: Date!
  refreshToken: String
  refreshTokenExpiresAt: Date!
  createdAt: Date!
  updatedAt: Date!
}

"""Input to link an object to a pointer _Session"""
input _SessionPointerInput {
  link: ID
  createAndLink: _SessionCreateFieldsInput
}

input _SessionCreateFieldsInput {
  userId: String
  accessToken: String
  accessTokenExpiresAt: Date
  refreshToken: String
  refreshTokenExpiresAt: Date
  createdAt: Date
  updatedAt: Date
}

"""Input to add a relation to the class _Session"""
input _SessionRelationInput {
  add: [ID!]
  remove: [ID!]
  createAndAdd: [_SessionCreateFieldsInput!]
}

type Query {
  """User class"""
  _user(id: ID): _User

  """User class"""
  _users(where: _UserWhereInput, offset: Int, limit: Int): _UserConnection!

  """Hello world description"""
  helloWorld(name: String!): String
  post(id: ID): Post
  posts(where: PostWhereInput, offset: Int, limit: Int): PostConnection!
  _session(id: ID): _Session
  _sessions(where: _SessionWhereInput, offset: Int, limit: Int): _SessionConnection!
}

type _UserConnection {
  edges: [_UserEdge]
}

type _UserEdge {
  node: _User!
}

"""User class"""
input _UserWhereInput {
  id: IdWhereInput
  name: StringWhereInput
  age: IntWhereInput
  isCool: BooleanWhereInput
  email: EmailWhereInput
  post: PostWhereInput
  postRelation: PostWhereInput
  birthDate: DateWhereInput
  phone: AnyWhereInput
  role: AnyWhereInput
  address: _UserAddressWhereInput
  object: _UserObjectWhereInput
  authentication: _UserAuthenticationWhereInput
  provider: AnyWhereInput
  verifiedEmail: BooleanWhereInput
  createdAt: DateWhereInput
  updatedAt: DateWhereInput
  OR: [_UserWhereInput]
  AND: [_UserWhereInput]
}

input IdWhereInput {
  equalTo: String
  notEqualTo: String
  in: [String]
  notIn: [String]
}

input StringWhereInput {
  equalTo: String
  notEqualTo: String
  in: [String]
  notIn: [String]
}

input IntWhereInput {
  equalTo: Int
  notEqualTo: Int
  lessThan: Int
  lessThanOrEqualTo: Int
  greaterThan: Int
  greaterThanOrEqualTo: Int
  in: [Int]
  notIn: [Int]
}

input BooleanWhereInput {
  equalTo: Boolean
  notEqualTo: Boolean
  in: [Boolean]
  notIn: [Boolean]
}

input EmailWhereInput {
  equalTo: Email
  notEqualTo: Email
  in: [Email]
  notIn: [Email]
}

input PostWhereInput {
  id: IdWhereInput
  name: StringWhereInput
  OR: [PostWhereInput]
  AND: [PostWhereInput]
}

input DateWhereInput {
  equalTo: Date
  notEqualTo: Date
  in: [Date]
  notIn: [Date]
  lessThan: Date
  lessThanOrEqualTo: Date
  greaterThan: Date
  greaterThanOrEqualTo: Date
}

input AnyWhereInput {
  equalTo: Any
  notEqualTo: Any
}

"""
The Any scalar type is used in operations and types that involve any type of value.
"""
scalar Any

input _UserAddressWhereInput {
  address1: StringWhereInput
  address2: StringWhereInput
  postalCode: IntWhereInput
  city: StringWhereInput
  country: StringWhereInput
  OR: [_UserAddressWhereInput]
  AND: [_UserAddressWhereInput]
}

input _UserObjectWhereInput {
  objectOfObject: _UserObjectObjectOfObjectWhereInput
  OR: [_UserObjectWhereInput]
  AND: [_UserObjectWhereInput]
}

input _UserObjectObjectOfObjectWhereInput {
  name: StringWhereInput
  OR: [_UserObjectObjectOfObjectWhereInput]
  AND: [_UserObjectObjectOfObjectWhereInput]
}

input _UserAuthenticationWhereInput {
  emailPassword: _UserAuthenticationEmailPasswordWhereInput
  otp: _UserAuthenticationOtpWhereInput
  OR: [_UserAuthenticationWhereInput]
  AND: [_UserAuthenticationWhereInput]
}

input _UserAuthenticationEmailPasswordWhereInput {
  email: EmailWhereInput
  password: StringWhereInput
  OR: [_UserAuthenticationEmailPasswordWhereInput]
  AND: [_UserAuthenticationEmailPasswordWhereInput]
}

input _UserAuthenticationOtpWhereInput {
  code: StringWhereInput
  OR: [_UserAuthenticationOtpWhereInput]
  AND: [_UserAuthenticationOtpWhereInput]
}

type _SessionConnection {
  edges: [_SessionEdge]
}

type _SessionEdge {
  node: _Session!
}

input _SessionWhereInput {
  id: IdWhereInput
  userId: StringWhereInput
  accessToken: StringWhereInput
  accessTokenExpiresAt: DateWhereInput
  refreshToken: StringWhereInput
  refreshTokenExpiresAt: DateWhereInput
  createdAt: DateWhereInput
  updatedAt: DateWhereInput
  OR: [_SessionWhereInput]
  AND: [_SessionWhereInput]
}

type Mutation {
  """User class"""
  create_User(input: Create_UserInput): Create_UserPayload

  """User class"""
  create_Users(input: Create_UsersInput): _UserConnection!

  """User class"""
  update_User(input: Update_UserInput): Update_UserPayload

  """User class"""
  update_Users(input: Update_UsersInput): _UserConnection!

  """User class"""
  delete_User(input: Delete_UserInput): Delete_UserPayload

  """User class"""
  delete_Users(input: Delete_UsersInput): _UserConnection!
  createMutation(input: CreateMutationInput): Boolean!
  customMutation(input: CustomMutationInput): Int
  secondCustomMutation(input: SecondCustomMutationInput): Int
  signInWith(input: SignInWithInput): Boolean
  signUpWith(input: SignUpWithInput): Boolean
  signOut: Boolean
  refresh: Boolean
  verifyChallenge(input: VerifyChallengeInput): Boolean
  createPost(input: CreatePostInput): CreatePostPayload
  createPosts(input: CreatePostsInput): PostConnection!
  updatePost(input: UpdatePostInput): UpdatePostPayload
  updatePosts(input: UpdatePostsInput): PostConnection!
  deletePost(input: DeletePostInput): DeletePostPayload
  deletePosts(input: DeletePostsInput): PostConnection!
  create_Session(input: Create_SessionInput): Create_SessionPayload
  create_Sessions(input: Create_SessionsInput): _SessionConnection!
  update_Session(input: Update_SessionInput): Update_SessionPayload
  update_Sessions(input: Update_SessionsInput): _SessionConnection!
  delete_Session(input: Delete_SessionInput): Delete_SessionPayload
  delete_Sessions(input: Delete_SessionsInput): _SessionConnection!
}

type Create_UserPayload {
  _user: _User
  clientMutationId: String
}

input Create_UserInput {
  fields: _UserCreateFieldsInput
}

input Create_UsersInput {
  fields: [_UserCreateFieldsInput]!
  offset: Int
  limit: Int
}

type Update_UserPayload {
  _user: _User
  clientMutationId: String
}

input Update_UserInput {
  id: ID
  fields: _UserUpdateFieldsInput
}

"""User class"""
input _UserUpdateFieldsInput {
  name: String
  age: Int
  isCool: Boolean
  email: Email
  post: PostPointerInput
  postRelation: PostRelationInput
  birthDate: Date
  phone: Phone
  role: Role
  address: _UserAddressUpdateFieldsInput
  object: _UserObjectUpdateFieldsInput
  authentication: _UserAuthenticationUpdateFieldsInput
  provider: AuthenticationProvider
  verifiedEmail: Boolean
  createdAt: Date
  updatedAt: Date
}

input _UserAddressUpdateFieldsInput {
  address1: String
  address2: String
  postalCode: Int
  city: String
  country: String
}

input _UserObjectUpdateFieldsInput {
  objectOfObject: _UserObjectObjectOfObjectUpdateFieldsInput
}

input _UserObjectObjectOfObjectUpdateFieldsInput {
  name: String
}

input _UserAuthenticationUpdateFieldsInput {
  emailPassword: _UserAuthenticationEmailPasswordUpdateFieldsInput
  otp: _UserAuthenticationOtpUpdateFieldsInput
}

input _UserAuthenticationEmailPasswordUpdateFieldsInput {
  email: Email
  password: String
}

input _UserAuthenticationOtpUpdateFieldsInput {
  code: String
}

input Update_UsersInput {
  fields: _UserUpdateFieldsInput
  where: _UserWhereInput
  offset: Int
  limit: Int
}

type Delete_UserPayload {
  _user: _User
  clientMutationId: String
}

input Delete_UserInput {
  id: ID
}

input Delete_UsersInput {
  where: _UserWhereInput
}

input CreateMutationInput {
  name: Int!
}

input CustomMutationInput {
  a: Int!
  b: Int!
}

input SecondCustomMutationInput {
  sum: SecondCustomMutationSumInput
}

input SecondCustomMutationSumInput {
  a: Int!
  b: Int!
}

input SignInWithInput {
  authentication: SignInWithAuthenticationInput
}

input SignInWithAuthenticationInput {
  emailPassword: SignInWithAuthenticationEmailPasswordInput
  otp: SignInWithAuthenticationOtpInput
  secondaryFactor: SecondaryFactor
}

input SignInWithAuthenticationEmailPasswordInput {
  email: Email!
  password: String!
}

input SignInWithAuthenticationOtpInput {
  code: String
}

input SignUpWithInput {
  authentication: SignUpWithAuthenticationInput
}

input SignUpWithAuthenticationInput {
  emailPassword: SignUpWithAuthenticationEmailPasswordInput
  otp: SignUpWithAuthenticationOtpInput
  secondaryFactor: SecondaryFactor
}

input SignUpWithAuthenticationEmailPasswordInput {
  email: Email!
  password: String!
}

input SignUpWithAuthenticationOtpInput {
  code: String
}

input VerifyChallengeInput {
  factor: VerifyChallengeFactorInput
}

input VerifyChallengeFactorInput {
  otp: VerifyChallengeFactorOtpInput
}

input VerifyChallengeFactorOtpInput {
  code: String
}

type CreatePostPayload {
  post: Post
  clientMutationId: String
}

input CreatePostInput {
  fields: PostCreateFieldsInput
}

input CreatePostsInput {
  fields: [PostCreateFieldsInput]!
  offset: Int
  limit: Int
}

type UpdatePostPayload {
  post: Post
  clientMutationId: String
}

input UpdatePostInput {
  id: ID
  fields: PostUpdateFieldsInput
}

input PostUpdateFieldsInput {
  name: String
}

input UpdatePostsInput {
  fields: PostUpdateFieldsInput
  where: PostWhereInput
  offset: Int
  limit: Int
}

type DeletePostPayload {
  post: Post
  clientMutationId: String
}

input DeletePostInput {
  id: ID
}

input DeletePostsInput {
  where: PostWhereInput
}

type Create_SessionPayload {
  _session: _Session
  clientMutationId: String
}

input Create_SessionInput {
  fields: _SessionCreateFieldsInput
}

input Create_SessionsInput {
  fields: [_SessionCreateFieldsInput]!
  offset: Int
  limit: Int
}

type Update_SessionPayload {
  _session: _Session
  clientMutationId: String
}

input Update_SessionInput {
  id: ID
  fields: _SessionUpdateFieldsInput
}

input _SessionUpdateFieldsInput {
  userId: String
  accessToken: String
  accessTokenExpiresAt: Date
  refreshToken: String
  refreshTokenExpiresAt: Date
  createdAt: Date
  updatedAt: Date
}

input Update_SessionsInput {
  fields: _SessionUpdateFieldsInput
  where: _SessionWhereInput
  offset: Int
  limit: Int
}

type Delete_SessionPayload {
  _session: _Session
  clientMutationId: String
}

input Delete_SessionInput {
  id: ID
}

input Delete_SessionsInput {
  where: _SessionWhereInput
}