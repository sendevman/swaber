### This file was generated by Nexus Schema
### Do not make changes to this file directly


input DeleteUserInput {
  id: ID!
}

input DeleteUsersInput {
  age: WhereDeleteAgeInput
  name: WhereDeleteNameInput
}

type Mutation {
  createUser(input: UserInput): User
  createUsers(input: UserInput): [User]
  deleteUser(input: DeleteUserInput): User
  deleteUsers(where: DeleteUsersInput): [User]
  updateUser(input: UpdateUserInput): User
  updateUsers(where: UpdateUsersInput): [User]
}

type Query {
  user(id: String!): User
  users: [User]
}

input UpdateUserInput {
  fields: UserInput
  id: ID!
}

input UpdateUsersInput {
  age: WhereUpdateAgeInput
  name: WhereUpdateNameInput
}

type User {
  age: WhereAgeInput
  name: WhereNameInput
}

input UserInput {
  age: Int
  name: String
}

type WhereAgeInput {
  equalTo: Int
  greaterThan: Int
  greaterThanOrEqualTo: Int
  lessThan: Int
  lessThanOrEqualTo: Int
  notEqualTo: Int
}

input WhereDeleteAgeInput {
  equalTo: Int
  greaterThan: Int
  greaterThanOrEqualTo: Int
  lessThan: Int
  lessThanOrEqualTo: Int
  notEqualTo: Int
}

input WhereDeleteNameInput {
  equalTo: String
  notEqualTo: String
}

type WhereNameInput {
  equalTo: String
  notEqualTo: String
}

input WhereUpdateAgeInput {
  equalTo: Int
  greaterThan: Int
  greaterThanOrEqualTo: Int
  lessThan: Int
  lessThanOrEqualTo: Int
  notEqualTo: Int
}

input WhereUpdateNameInput {
  equalTo: String
  notEqualTo: String
}