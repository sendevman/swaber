// Generated by dts-bundle-generator v8.0.1

export type TypeField = {
	type: "string";
	required?: boolean;
	defaultValue?: string;
} | {
	type: "number";
	required?: boolean;
	defaultValue?: number;
} | {
	type: "boolean";
	required?: boolean;
	defaultValue?: boolean;
} | {
	type: "array";
	required?: boolean;
	defaultValue?: any[];
} | {
	type: "object";
	required?: boolean;
	defaultValue?: Record<string, any>;
} | {
	type: "date";
	required?: boolean;
	defaultValue?: Date;
};
export type SchemaField = Record<string, TypeField>;
export interface Schema {
	name: string;
	fields: SchemaField;
}
declare enum DatabaseEnum {
	Mongo = "mongo"
}
export interface DatabaseConfig {
	type: DatabaseEnum;
	url: string;
}
export interface WibeConfig {
	port: number;
	schema: Schema[];
	database: DatabaseConfig;
}
export declare class WibeApp {
	private config;
	private server;
	constructor(config: WibeConfig);
}

export {};
