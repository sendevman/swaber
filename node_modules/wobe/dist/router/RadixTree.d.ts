import type { Hook, HttpMethod, WobeHandler } from '../Wobe';
export interface Node {
    name: string;
    children: Array<Node>;
    handler?: WobeHandler;
    beforeHandlerHook?: Array<WobeHandler>;
    afterHandlerHook?: Array<WobeHandler>;
    method?: HttpMethod;
    isParameterNode?: boolean;
    isWildcardNode?: boolean;
    params?: Record<string, string>;
}
export declare class RadixTree {
    root: Node;
    private isOptimized;
    addRoute(method: HttpMethod, path: string, handler: WobeHandler): void;
    _addHookToNode(node: Node, hook: Hook, handler: WobeHandler): void;
    addHook(hook: Hook, path: string, handler: WobeHandler, method: HttpMethod, node?: Node): void;
    findRoute(method: HttpMethod, path: string): Node | null;
    optimizeTree(): void;
}
